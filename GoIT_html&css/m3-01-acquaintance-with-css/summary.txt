Module 03 Acquaintance with css
	1. html - используется для наполнения doc контентом
	2. css - (таблицы стилей) используется оформления html document, наведения красоты.
	3. Синтксис CSS: Selector (body) {color (property): red(value);}
	4. DevTools -> tab Computed - все финальные стили нашего элемента.
	5. Селектор тега (p) - выбирает абсолютно все элементы данного типа тега. Используется редко, знать необходимо.
	6. Селектор класса (.title)
	7. Селектор класса к определенному тегу (p.title) примениться к классу title тега p.
	8. id - уникален = 1 на странице. По id не стилизируем, это не правильно. id, как якорь   можно использовать для навигации по текущей странице.
	9. Селектор id (#promo)
	10. Несколько селекторов класса (.promo .warning) - найти любой элемент класса warning внутри класса promo.
	11. Свойства элемента можно комбинировать и явно с помощью множественных классов.
	12. Псевдоклассы - это специальные классы состояний
	13. Селектор псевдокласса для какого либо элемента (.title:hover {color: red;}
	14. Специфичность. Приоритетность. 
		a. Специфичность определяется по селектору.
		b. Если она одинаковая, то побеждает то правило, которое расположено ниже в коде.
		c. Чем проще селекторы, тем меньше проблем с расчётом специфичности.
		d. Расчет специфичности 0000
			▪ 1000 - inline css - такого делать не нужно
			▪ 0100 - id селектор
			▪ 0010 - classs селектор, а также псевдо класс
			▪ 0001 - за каждый элемент (селектор тега) и псевдо элемент
		e. Примеры
			▪ p {} = 0001
			▪ p a {} = 0002
			▪ .text {} = 0010
			▪ p.text{} = 0011 - так как есть тек = 0001, а также класс 0010 и они накладываются = 0011
			▪ #som-id p.text a.link span = 0123
	15. Если есть конфликтующие селекторы класса или тега с разными значениями, то примениться то, специфичность которого выше. То, что ниже, позже, свежее записано, то и специфичнее.
	16. Наследование - если верхнему тегу дать какое-либо свойство, которое может быть унаследовано, то все что внутри него стоит унаследует это свойство. 
	17. В основному наследуются цвета и шрифты.
	18. Не наследуются размеры, позиции.
	19. Цвет RGB, CMYK, HSL
		a. RGB - red, green, blue
		b. rgb - от 0 до 255 или от 0% до 100%
		c. rgb - (0 0 0) - черный
		d. rgb (255 255 255) - белый
		e. rgb (100% 100% 100%) - белый
	20. Прозрачность (alpha channel) rgba (255 0 0 0.5) - на 50% прозрачный
	21. Абсолютные и относительные единицы измерения CSS - size
		a. px - пиксель 
		b. %
		c. em
		d. rem
		e. vw
		f. vh
	22. Шрифт
		a. font-size - размер
			▪ 9px;
			▪ 16px;
			▪ 28px;
		b. font-weight - жирность
			▪ 300 - light
			▪ 400 - normal (regular)
			▪ 600 - semibold
			▪ 700 - bold
		c. font-style - начертание
			▪ normal
			▪ italic
		d. font-famile - семейство шрифта
			▪ calibri
			▪ 'arial'
			▪ ' ' кавычки не обязательны, если шрифт описывается 1 словом
			▪ ' ' кавычки обязательны, если шрифт описывается более чем 1 слово 'Times New Roman'
			▪ https://fonts.google.com/ - выбираем, вставляем в css файл перед стилями.
			▪ serif - с засечками
			▪ sans-serif - без засечек 
			▪ 'Roboto', 'Arial', sans-serif - будет применен шрифт Roboto, если не найдет будет Arial, если не найдет применит шрифт из семейства без засечек.
		e. text-decoration - декоррирование шрифта
			▪ none
			▪ underline
		f. color - цвет
		g. text-indent - отступ первой строки в абзаце
		h. text-height - межстрочный интервал
	23. background-image: url('');
	24. background-repeat: repeat-x;
	25. background-size: no-repeat; | cover;
	26. background-position: 100px 100px; | 10% 10%; | center;
	27. Тег body - блочный элемент. Блочные элементы заполняются по высоте своего контента.
vh - высота & vw - ширира - вьюпорт - это то, где отображается непосредственно наша страница. Не включая адресную строку, инструменты разработчика и т.д.